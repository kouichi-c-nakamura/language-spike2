# TextMate tutorial: http://manual.macromates.com/en/language_grammars
# https://gist.github.com/DamnedScholar/622926bcd222eb1ddc483d12103fd315#file-language-samplegrammar-cson
# see also https://github.com/JamesRitchie/language-matlab/blob/master/grammars/m.cson for reference

# Regex to convert keys to unquoted: '(include|match|captures|begin|end|beginCaptures|endCaptures|name|patterns|0|1|2|3|4|5|6|7|8|9|comment|fileTypes|scopeName|repository|contentName|firstLineMatch|foldingStartMarker|foldingStopMarker)':

scopeName: 'source.spike2' # <scope> should be a short, unique indicator for the language ("js", "php", "c", etc.)

name: 'Spike2' # The title that will show up in grammar selection and on your status bar.

fileTypes: [
  's2s'
]
firstLineMatch: '' # A regular expression that is matched against the first line of the document when Atom is trying to decide if the grammar is appropriate. Useful for shell scripts, mostly.

foldingStartMarker: '' # A regular expression that checks for the start of a foldable area (such as `{`).

foldingStopMarker: '' # A regular expression that checks for the end of a foldable area (such as `}`). If both folding markers are matched in the same line, there will be no foldable area.

patterns: [
  {
    begin: "'"
    end: "$"
    name: 'comment.line.spike2'
  }
  {
      include: '#keyword'
  }
  {
      include: '#comment'
  }
  {
      include: '#func'
  }
  {
      include: '#proc'
  }
  {
      include: '#builtinfunction'
  }
  {
      include: '#string'
  }
  {
      include: '#numeric'
  }
]
repository:
  numeric:
    patterns: [
      {
          match: "(?<=\\W)\\-{0,1}\\d+(|\\.|\\.\\d*)(?=\\W)"
          name: 'constant.numeric.spike2'
      }
      {
          match: "(?<=\\W)\\-{0,1}\\d+(|\\.|\\.\\d*)e\\-{0,1}\\d+(|\\.|\\.\\d*)(?=\\W)"
          name: 'constant.numeric.spike2'
      }
    ]
  comment:
    patterns: [
      {
          begin: "'"
          end: "$"
          name: 'comment.line.spike2'
      }
    ]
  string:
    patterns: [
      {
          begin: "\""
          end: "\""
          name: 'string.quoted.double.spike2'
      }
    ]

  func:
    patterns: [
      {
        match: "^\\s*\\b(?i)(func)\\s+(\\w+[%$]{0,1})\\s*\\("
        name: 'meta.func.spike2'
        captures:
          "1":
            name: 'storage.type.function.func.spike2'
          "2":
            name: 'entity.name.func.spike2'
      }
      {
        match: "^\\s*(?i)(end)\\b" # "^\\s*(end)\\b"
        captures:
          "1":
            name: "keyword.control.end.func.spike2"
      }
    ]
  proc:
    patterns: [
      {
        match: "^\\s*\\b(?i)(proc)\\s+(\\w+[%$]{0,1})\\s*\\("
        name: 'meta.proc.spike2'
        captures:
          "1":
            name: 'storage.type.function.proc.spike2'
          "2":
            name: 'entity.name.proc.spike2'
      }
      {
        match: "^\\s*(?i)(end)\\b" # "^\\s*(end)\\b"
        captures:
          "1":
            name: "keyword.control.end.proc.spike2"
      }
    ]
# NOT WORKING: the contents are all ignored for styling (no class name assigned) although proc and end are captured
  # proc:
  #   patterns: [
  #     {
  #       begin: "^\\s*\\b(?i)(proc)\\s+(\\w+[%$]{0,1})\\s*\\(.*\\)"
  #       beginCaptures:
  #         "1":
  #           name: 'storage.type.function.proc.spike2'
  #         "2":
  #           name: 'entity.name.proc.spike2'
  #       end: "^\\s*(?i)(end)\\b"
  #       endCaptures:
  #         "1":
  #           name: "keyword.control.end.proc.spike2"
  #       name: 'meta.proc.spike2'
  #     }
  #   ]
  keyword:
    patterns: [
      {
          match: "^\\s*(?i)(end)\\b"
          name: 'storage.type.function.end.spike2'
      }
      {
        comment: ""
        match: "(?<!\\.)\\b(?i)(return|and|var|view|const|#include)\\b"
        name: 'keyword.other.spike2'
      }
      {
        comment: "operator"
        match: "(?<!\\.)\\b(?i)(and|or|not|band|bor|bxor|diag|mod|trans|xor|resize)\\b"
        name: 'keyword.operator.spike2'
      }
      {
        comment: "control"
        match: "(?<!\\.)\\b(?i)(if|then|else|endif|for|do|next|docase|case|endcase|break|continue|repeat|until|step|to|wend|while|halt)\\b"
        name: 'keyword.control.spike2'
      }
    ]
  builtinfunction:
    patterns: [
      {
        name: "support.function.spike2"
        match: "(?<!\\.)\\b(?i)(Abs|App|ArrAdd|ArrConst|ArrConv|ArrDiff|ArrDiv|ArrDivR|ArrDot|ArrFFT|ArrFilt|ArrHist|ArrIntgl|ArrMul|ArrSort|ArrSpline|ArrStats|ArrSub|ArrSubR|ArrSum|Asc|ATan|Betal|BinError|BinominalC|Binsize|BinToX|BRead|BReadSize|BRWEndian|BSeek|BurstMake|BurstRevise|BurstStats|BWrite|BWriteSize|Ceil|Chan\\$|ChanCalibrate|ChanColour|ChanColourGet|ChanColourSet|ChanComment\\$|ChanData|ChanDecorate|ChanDelete|ChanDuplicate|ChanFit|ChanFitCoef|ChanFitShow|ChanFitValue|ChanHide|ChanImage|ChanIndex|ChanKey|ChanKind|ChanList|ChanMeasure|ChanNew|ChanNumbers|ChanOffset|ChanOrder|ChanPenWidth|ChanPixel|ChanPort|ChanProcessAdd|ChanProcessArg|ChanProcessClear|ChanProcessCopy|ChanProcessInfo|ChanSave|ChanScale|ChanSearch|ChanSelect|ChanShow|ChanUndelete|ChanTitle\\$|ChanUnits\\$|ChanValue|ChanVisible|ChanWeight|ChanWriteWave|Chr\\$|Colour|ColourGet|ColourSet|CondFeature|CondFilter|CondFilterList|CondFilterType|CondGain|CondGainList|CondGet|CondOffset|CondOffsetLimit|CondRevision\\$|CondSet|CondSourceList|CondType|Cos|Cosh|Count|Cursor|CursorActive|CursorActiveGet|CursorDelete|CursorExists|CursorLabel|CursorLabelPos|CursorNew|CursorOpen|CursorRenumber|CursorSearch|CursorSet|CursorValid|CursorVisible|CursorX|Date\\$|Debug|DebugHeap|DebugList|DebugOpts|DelStr\\$|DiscrimChanGet|DiscrimChanSet|DiscrimClear|DiscrimLevel|DiscrimMode|DiscrimMonitor|DiscrimTimeOut|DlgAllow|DlgButton|DlgChan|DlgCheck|DlgCreate|DlgEnable|DlgFont|DlgGetPos|DlgGroup|DlgImage|DlgInteger|DlgLabel|DlgList|DlgMouse|DlgReal|DlgShow|DlgSlider|DlgString|DlgText|DlgValue|DlgValue\\$|DlgVisible|DlgXValue|Draw|DrawAll|DrawMode|Dup|DupChan|EditClear|EditCopy|EditCut|EditFind|EditPaste|EditReplace|EditSelectAll|Error\\$|Eval|EventToWaveform|Exp|ExportChanFormat|ExportChanList|ExportRectFormat|ExportTextFormat|FileApplyResource|FileClose|FileComment\\$|FileConvert\\$|FileCopy|FileDate\\$|FileDelete|FileGlobalResource|FileInfo|FileList|FileName\\$|FileNew|FileOpen|FilePath\\$|FilePathSet|FilePrint|FilePrintScreen|FilePrintVisible|FileQuit|FileSave|FileSaveAs|FileSaveResource|FileSize|FileTime\\$|FileTimeBase|FileTimeDate|FileTimeDateSet|FiltApply|FiltAtten|FiltCalc|FiltComment\\$|FiltCreate|FiltInfo|FiltName\\$|FiltRange|FIRMake|FIRQuick|FIRResponse|FitCoef|FitData|FitExp|FitGauss|FitLine|FitLinear|FitNLUser|FitPoly|FitSigmoid|FitSin|FitValue|Floor|FocusHandle|FontGet|FontSet|Frac|FrontView|GammaP|GammaQ|GrdAlign|GrdColWidth|GrdGet|GrdSet|GrdShow|GrdSize|Grid|Gutter|HCursor|HCursorActive|HCursorChan|HCursorDelete|HCursorExists|HCursorLabel|HCursorLabelPos|HCursorNew|HCursorRenumber|HCursorValid|HCursorX|Help|IIRApply|IIRBp|IIRBs|IIRComment\\$|IIRCreate|IIRHp|IIRInfo|IIRLp|IIRName\\$|IIRNotch|IIRReson|Inkey|Input|Input\\$|InStr|InStrRE|Interact|Keypress|LastTime|LCase\\$|Left\\$|Len|LinPred|Ln|LnGamma|Log|LogHandle|MarkEdit|MarkInfo|MarkMask|MarkSet|MarkShow|MATDet|MATInv|MATLABOpen|MATLABClose|MATLABPut|MATLABGet|MATLABEval|MATLABShow|MATMul|MATSolve|MATTrace|MATTrans|Max|Maxtime|MeasureChan|MeasureToChan|MeasureToXY|MeasureX|MeasureY|MemChan|MemDeleteItem|MemDeleteTime|MemGetItem|MemImport|MemSave|MemSetItem|Message|Mid\\$|Min|Minmax|MMAudio|MMFrame|MMImage|MMOffset|MMOpen|MMPosition|MMRate|MMVideo|Modified|MousePointer|MoveBy|MoveTo|NextTime|Optimise|OutputReset|PaletteGet|PaletteSet|PCA|PlayOffline|PlayWaveAdd|PlayWaveChans|PlayWaveCopy|PlayWaveCycles|PlayWaveDelete|PlayWaveEnable|PlayWaveInfo\\$|PlayWaveKey2|PlayWaveLabel\\$|PlayWaveLink\\$|PlayWavePoints|PlayWaveRate|PlayWaveSpeed|PlayWaveStatus\\$|PlayWaveStop|PlayWaveTrigger|Pow|Print|Print\\$|PrintLog|Process|ProcessAll|ProcessAuto|ProcessTriggered|Profile|ProgKill|ProgRun|ProgStatus|Query|Rand|RandExp|RandNorm|RasterAux|RasterGet|RasterSet|RasterSort|RasterSymbol|Read|ReadSetup|ReadStr|ReRun|Right\\$|Round|SampleAbort|SampleAutoComment|SampleAutoCommit|SampleAutoFile|SampleAutoName\\$|SampleBar|SampleCalibrate|SampleChanInfo|SampleChannels|SampleClear|SampleComment\\$|SampleConfig\\$|SampleDebounce|SampleDigMark|SampleEvent|SampleHandle|SampleIdle|SampleInfo|SampleKey|SampleKeyMark|SampleLimitSize|SampleLimitTime|SampleMode|SampleOptimise|SampleRepeats|SampleReset|SampleSeqClock|SampleSeqCtrl|SampleSeqStep|SampleSeqTable|SampleTick0|SampleSequencer|SampleSequencer\\$|SampleSeqVar|SampleStart|SampleStartTrigger|SampleStatus|SampleStop|SampleTalker|SampleText|SampleTextMark|SampleTimePerAdc|SampleTitle\\$|SampleTrigger|SampleUsPerTime|SampleWaveform|SampleWaveMark|SampleWrite|ScriptBar|ScriptRun|Seconds|Selection\\$|SerialClose|SerialCount|SerialOpen|SerialRead|SerialWrite|SetAverage|SetEvtCrl|SetEvtCrlShift|SetINTH|SetPhase|SetPower|SetPSTH|SetResult|SetWaveCrl|SetWaveCrlDC|Sin|Sinh|SMControl|SMOpen|Sound|Speak|Sqrt|SSButton|SSChan|SSClassify|SSColApply|SSColArea|SSColInfo|SSOpen|SSParam|SSRun|SSTempDelete|SSTempGet|SSTempInfo|SSTempSet|SSTempSizeGet|SSTempSizeSet|Str\\$|StrToChanY|StrToViewX|Sweeps|System|System\\$|TabSettings|TalkerReadStr|TalkerSendStr|Tan|Tanh|Time\\$|TimeDate|Toolbar|ToolbarClear|ToolbarEnable|ToolbarMouse|ToolbarSet|ToolbarText|ToolbarVisible|Trim|TrimLeft|TrimRight|Trunc|U1401Close|U1401Ld|U1401Open|U1401Read|U1401To1401|U1401ToHost|U1401Write|UCase\\$|Val|VerticalMark|View|ViewColour|ViewColourGet|ViewColourSet|ViewFind|ViewKind|ViewLineNumbers|ViewLink|ViewList|ViewMaxLines|ViewOverdraw|ViewOverdraw3D|ViewStandard|ViewTrigger|ViewUseColour|ViewZoom|VirtualChan|Window|WindowDuplicate|WindowGetPos|WindowSize|WindowTitle\\$|WindowVisible|XAxis|XAxisAttrib|XAxisMode|XAxisStyle|XHigh|XLow|XRange|XScroller|XTitle\\$|XToBin|XUnits\\$|XYAddData|XYColour|XYCount|XYDelete|XYDrawMode|XYGetData|XYInChan|XYInCircle|XYInRect|XYJoin|XYKey|XYOffset|XYRange|XYSetChan|XYSize|XYSort|YAxis|YAxisAttrib|YAxisLock|YAxisMode|YAxisStyle|YHigh|Yield|YieldSystem|YLow|YRange|ZeroFind)(?=\\()"
      }
    ]
